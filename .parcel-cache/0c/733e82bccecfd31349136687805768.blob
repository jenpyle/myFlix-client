var helpers = require("../../../../../AppData/Roaming/npm/node_modules/parcel/node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);
try {
  var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
  _parcelHelpers.defineInteropFlag(exports);
  _parcelHelpers.export(exports, "RegistrationView", function () {
    return RegistrationView;
  });
  var _react = require('react');
  var _reactDefault = _parcelHelpers.interopDefault(_react);
  var _reactBootstrap = require('react-bootstrap');
  var _axios = require('axios');
  var _axiosDefault = _parcelHelpers.interopDefault(_axios);
  require('./registration-view.scss');
  var _jsxFileName = "C:\\Users\\jenny\\git_projects\\myFlix-client\\src\\components\\registration-view\\registration-view.jsx", _s = $RefreshSig$();
  function RegistrationView(props) {
    _s();
    // excluding the 'extends React.Component' bc this is a function component, not class component. And can use hooks
    const [username, setUsername] = _react.useState('');
    // assigns an empty string to the username variable—and assigns to the setUsername variable a method to update the username variable
    const [password, setPassword] = _react.useState('');
    const [email, setEmail] = _react.useState('');
    const [birthday, setBirthday] = _react.useState('');
    const handleSubmit = e => {
      console.log('===============HERE in handleSubmit of registration view');
      // the callback function
      e.preventDefault();
      // prevents the default refresh/change of the page
      console.log(username, password, email, birthday);
      _axiosDefault.default.post('https://jennysflix.herokuapp.com/users', {
        Username: username,
        Password: password,
        Email: email,
        Birthday: birthday
      }).// POST request is made to the login endpoint by passing the username and password
      then(response => {
        // If there’s a match, the onLoggedIn method that was passed through the props is called
        const data = response.data;
        // contains the token that was generated...and more
        props.onLoggedIn(data);
      }).catch(e => {
        console.log('User not found??????');
      });
    };
    const handleBackClick = e => {
      console.log('iiiiiiiiiiiiiiiiiiinside handleBackClick');
      window.location.reload(false);
    };
    return (
      /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Form, {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 43,
          columnNumber: 5
        }
      }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Form.Group, {
        controlId: "formUsername",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 44,
          columnNumber: 7
        }
      }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Form.Label, {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 45,
          columnNumber: 9
        }
      }, "Username:"), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Form.Control, {
        type: "text",
        onChange: e => setUsername(e.target.value),
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 46,
          columnNumber: 9
        }
      })), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Form.Group, {
        controlId: "formPassword",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 49,
          columnNumber: 7
        }
      }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Form.Label, {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 50,
          columnNumber: 9
        }
      }, "Password:"), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Form.Control, {
        type: "password",
        onChange: e => setPassword(e.target.value),
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 51,
          columnNumber: 9
        }
      })), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Form.Group, {
        controlId: "formEmail",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 54,
          columnNumber: 7
        }
      }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Form.Label, {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 55,
          columnNumber: 9
        }
      }, "Email:"), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Form.Control, {
        type: "email",
        onChange: e => setEmail(e.target.value),
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 56,
          columnNumber: 9
        }
      })), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Form.Group, {
        controlId: "formUsername",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 59,
          columnNumber: 7
        }
      }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Form.Label, {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 60,
          columnNumber: 9
        }
      }, "Birthday"), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Form.Control, {
        type: "date",
        onChange: e => setBirthday(e.target.value),
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 61,
          columnNumber: 9
        }
      })), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Button, {
        variant: "primary",
        type: "submit",
        onClick: handleSubmit,
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 64,
          columnNumber: 7
        }
      }, "Submit"), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Button, {
        variant: "secondary",
        type: "button",
        onClick: handleBackClick,
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 67,
          columnNumber: 7
        }
      }, "Back"))
    );
  }
  _s(RegistrationView, "tdA1KK8yaZidqYo0wscqshHt/KE=");
  _c = RegistrationView;
  var _c;
  $RefreshReg$(_c, "RegistrationView");
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
