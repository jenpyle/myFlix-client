var helpers = require("../../../../../AppData/Roaming/npm/node_modules/parcel/node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);
try {
  var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
  _parcelHelpers.defineInteropFlag(exports);
  _parcelHelpers.export(exports, "MovieView", function () {
    return MovieView;
  });
  var _react = require('react');
  var _reactDefault = _parcelHelpers.interopDefault(_react);
  var _propTypes = require('prop-types');
  var _propTypesDefault = _parcelHelpers.interopDefault(_propTypes);
  var _reactBootstrap = require('react-bootstrap');
  require('./movie-view.scss');
  var _jsxFileName = "C:\\Users\\jenny\\git_projects\\myFlix-client\\src\\components\\movie-view\\movie-view.jsx";
  class MovieView extends _reactDefault.default.Component {
    render() {
      // The prop represents the movie object, which will be passed in MainView once you import and use the new component there.
      const {movieData, onBackClick} = this.props;
      // The component will render whatever properties in the movie object are passed as a prop.
      return (
        /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Row, {
          className: "movie-view",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 13,
            columnNumber: 7
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Col, {
          className: "move-poster",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 14,
            columnNumber: 9
          }
        }, /*#__PURE__*/_reactDefault.default.createElement("img", {
          src: movieData.ImagePath,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 15,
            columnNumber: 11
          }
        })), /*#__PURE__*/_reactDefault.default.createElement("span", {
          className: "movie-title",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 17,
            columnNumber: 9
          }
        }, /*#__PURE__*/_reactDefault.default.createElement("span", {
          className: "label",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 18,
            columnNumber: 11
          }
        }, "Title: "), /*#__PURE__*/_reactDefault.default.createElement("span", {
          className: "value",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 19,
            columnNumber: 11
          }
        }, movieData.Title), /*#__PURE__*/_reactDefault.default.createElement("div", {
          className: "movie-description",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 21,
            columnNumber: 11
          }
        }, /*#__PURE__*/_reactDefault.default.createElement("span", {
          className: "label",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 22,
            columnNumber: 13
          }
        }, "Description: "), /*#__PURE__*/_reactDefault.default.createElement("span", {
          className: "value",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 23,
            columnNumber: 13
          }
        }, movieData.Description), /*#__PURE__*/_reactDefault.default.createElement("div", {
          className: "label",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 25,
            columnNumber: 13
          }
        }, "Year: "), /*#__PURE__*/_reactDefault.default.createElement("span", {
          className: "value",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 26,
            columnNumber: 13
          }
        }, movieData.Year), /*#__PURE__*/_reactDefault.default.createElement("div", {
          className: "label",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 28,
            columnNumber: 13
          }
        }, "Rated: "), /*#__PURE__*/_reactDefault.default.createElement("span", {
          className: "value",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 29,
            columnNumber: 13
          }
        }, movieData.Rated)), /*#__PURE__*/_reactDefault.default.createElement("div", {
          className: "movie-director",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 31,
            columnNumber: 11
          }
        }, /*#__PURE__*/_reactDefault.default.createElement("span", {
          className: "label",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 32,
            columnNumber: 13
          }
        }, "Director: "), /*#__PURE__*/_reactDefault.default.createElement("span", {
          className: "value",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 33,
            columnNumber: 13
          }
        }, movieData.Director.Bio))), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrap.Button, {
          variant: "info",
          onClick: () => {
            onBackClick(null);
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 36,
            columnNumber: 9
          }
        }, "Back"))
      );
    }
  }
  MovieView.propType = {
    movieData: _propTypesDefault.default.shape({
      Title: _propTypesDefault.default.string.isRequired,
      Description: _propTypesDefault.default.string.isRequired,
      ImagePath: _propTypesDefault.default.string.isRequired,
      Genre: _propTypesDefault.default.shape({
        Name: _propTypesDefault.default.string.isRequired,
        Description: _propTypesDefault.default.string.isRequired
      }),
      Director: _propTypesDefault.default.shape({
        Name: _propTypesDefault.default.string.isRequired,
        Bio: _propTypesDefault.default.string.isRequired
      })
    }).isRequired,
    onBackClick: _propTypesDefault.default.func.isRequired
  };
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
