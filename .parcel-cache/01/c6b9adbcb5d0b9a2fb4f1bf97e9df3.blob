var helpers = require("../../../../../AppData/Roaming/npm/node_modules/parcel/node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);
try {
  var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
  _parcelHelpers.defineInteropFlag(exports);
  _parcelHelpers.export(exports, "LoginView", function () {
    return LoginView;
  });
  var _react = require('react');
  var _reactDefault = _parcelHelpers.interopDefault(_react);
  var _reactBootstrapForm = require('react-bootstrap/Form');
  var _reactBootstrapFormDefault = _parcelHelpers.interopDefault(_reactBootstrapForm);
  var _reactBootstrapButton = require('react-bootstrap/Button');
  var _reactBootstrapButtonDefault = _parcelHelpers.interopDefault(_reactBootstrapButton);
  require('./login-view.scss');
  var _jsxFileName = "C:\\Users\\jenny\\git_projects\\myFlix-client\\src\\components\\login-view\\login-view.jsx", _s = $RefreshSig$();
  function LoginView(props) {
    _s();
    // excluding the 'extends React.Component' bc this is a function component, not class component. And can use hooks
    const [username, setUsername] = _react.useState('');
    // assigns an empty string to the username variableâ€”and assigns to the setUsername variable a method to update the username variable
    const [password, setPassword] = _react.useState('');
    console.log('in login view');
    const handleSubmit = e => {
      console.log('===============inside handleSubmit');
      // the callback function
      e.preventDefault();
      // prevents the default refresh/change of the page
      console.log(username, password);
      /*Send a request to the server for authentication*/
      /*then call props.onLoggedIn(username)*/
      props.onLoggedIn(username);
    };
    const handleRegister = e => {
      console.log('===============inside handleRegister');
      props.onRegisterNewUser(username);
    };
    // return (
    // <form>
    // <button type="button" onClick={handleRegister}>
    // Register New User
    // </button>
    // <br></br>
    // <label>
    // Username:
    // <input type="text" value={username} onChange={(e) => setUsername(e.target.value)} />
    // </label>
    // <label>
    // Password:
    // <input type="password" value={password} onChange={(e) => setPassword(e.target.value)} />
    // </label>
    // <button type="submit" onClick={handleSubmit}>
    // Submit
    // </button>
    // </form>
    // );
    return (
      /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default, {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 48,
          columnNumber: 5
        }
      }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Group, {
        controlId: "formUsername",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 49,
          columnNumber: 7
        }
      }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Label, {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 50,
          columnNumber: 9
        }
      }, "Username:"), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Control, {
        type: "text",
        onChange: e => setUsername(e.target.value),
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 51,
          columnNumber: 9
        }
      })), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Group, {
        controlId: "formPassword",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 54,
          columnNumber: 7
        }
      }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Label, {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 55,
          columnNumber: 9
        }
      }, "Password:"), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapFormDefault.default.Control, {
        type: "password",
        onChange: e => setPassword(e.target.value),
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 56,
          columnNumber: 9
        }
      })), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapButtonDefault.default, {
        variant: "primary",
        type: "submit",
        onClick: handleSubmit,
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 58,
          columnNumber: 7
        }
      }, "Submit"))
    );
  }
  _s(LoginView, "wuQOK7xaXdVz4RMrZQhWbI751Oc=");
  _c = LoginView;
  var _c;
  $RefreshReg$(_c, "LoginView");
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
